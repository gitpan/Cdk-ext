</R>Purpose<!R>
The label widget allows a programmer to create a message box. This message box
can be part of the screen or a temporary pop up message box.

</R>Construction Options<!R>
A label widget is defined using the following syntax. The variable
</B>$labelObject<!B> contains the reference to the label object.
$labelObject = new Cdk::Label ( options );
 
The options are defined in the following table.

</U>Option      Default Value       Type       Purpose<!U>
Mesg        Required            Array Ref  This is the contents of the message inside the window.
Xpos        Center              Scalar     This is the position of the window on the X axis.
Ypos        Center              Scalar     This is the position of the window on the Y axis.
Box         True                Scalar     This Boolean states whether the dialog box will have a box drawn around it.
Shadow      False               Scalar     This Boolean states whether the dialog box will have a shadow on the box.

</R>Available Methods<!R>
</B>draw<!B>
This method draws the object on the screen. The following example demonstrates
how to call the draw method.
$labelObject->draw ( options );

The options are defined in the following table.

</U>Option      Default Value       Type       Purpose<!U>
Box         True                Scalar     Draws the window with a box around it.

</B>erase<!B>
This method removes the object from the screen. This does </B/U>NOT<!B!U> 
destroy the object. The following example demonstrates how to call the erase 
method.
$labelObject->erase ();

</B>wait<!B>
This method freezes until a key has been hit. This allows the user to put a 
message inside the label telling the user to hit any key when ready. The 
following example demonstrates how to call the wait method.
$labelObject->wait( options );

The options are defined in the following table.

</U>Option      Default Value       Type       Purpose<!U>
Key         NULL                Scalar     Tells the object which key to hit to exit the object.

</B>raise<!B>
The raise method raises the widget to the top of the screen. This means if there
were any widgets obscuring part of the view, raising the object would bring the
complete object into view. The following example demonstrates how to call the 
raise method.
$labelObject->raise();

</B>lower<!B>
The lower method lowers the object so it doesn't obscure the view of any other 
objects. The following example demonstrates how to call the lower method.
$labelObject->lower();

</B>register<!B>
The register method registers the object to the default screen. This does </R>NOT<!R>
have to be called since the objects are registered automatically. This method
should be called if the </B>unregister<!B> method was called. The following
example demonstrates how to call the register method.
$labelObject->register();

</B>unregister<!B>
The unregister method should be called when a widget, which is part of the
default screen, needs to be taken away temporarily. This does not delete or free
the object, it just unmaps it from any future screen refreshes. The object can
be registered by calling the </B>register<!B> method. The following example
demonstrates how to call the unregister method.
$labelObject->unregister();

</B>getwin<!B>
This method returns a pointer to the window of the object. Not much use for this
yet. It will be useful in the future when the drawing methods are added. The
following example demonstrates how to call the getwin method.
$labelObject->getwin();

</R>Tips & Tricks<!R>
<B=*>A title can be added to the label widget by using the formatting commands available with Cdk.

</R>Physical Restrictions<!R>
</U>Restriction                    Value<!U>
Maximum Rows                   300

</R>Example Use Of The Widget<!R>

#!/usr/local/bin/perl

#
# Load in the Cdk Extension.
#
use Cdk;
Cdk::init();

# Set up the label rows.
my @mesg = ("<C>This is a test of the Perl Cdk extension.",
        	"<L></22>Written by...",
        	"<R></5>Mike Glover");

# Create the label object.
my $title = new Cdk::Label ('Mesg' => \@mesg);

# Draw the label with a box.
$title->draw ('Box' => "TRUE");

# Wait for the user to press a key.
$title->wait();

# Exit Cdk.
Cdk::end();
<C><#HL(70)>
                       Document Created: June, 1995
                       Document Revised: November, 1995
                       Document Revised: March, 1996
