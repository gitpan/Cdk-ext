</R>Purpose<!R>
The Cdk file selector widget allows the user to select a valid file using
a full screen interface.

</R>Construction Options<!R>
The file selector widget is defined using the following syntax. The variable
</B>$fselectObject<!B> contains the reference to the entry object.
$fselectObject = new Cdk::Fselect ( options );
 
The options are defined in the following table.

</U>Option      Default Value       Type       Purpose<!U>
Height      Required            Scalar     The height of the widget.
Width       Required            Scalar     The width of the widget.
Dattrib     Normal              Scalar     The display attributes of a directory inside the scroll region.
Fattrib     Normal              Scalar     The display attributes of a file inside the scroll region.
Lattrib     Normal              Scalar     The display attributes of a link inside the scroll region.
Sattrib     Normal              Scalar     The display attributes of a socket inside the scroll region.
Highlight   Reverse             Scalar     The highlight attribute of the scrolling list.
Fieldattr   Normal              Scalar     The attribute of the characters typed in.
Filler      .                   Scalar     The default field character.
Fillattr    .                   Scalar     The default field character attribute.
Xpos        Center              Scalar     This is the position of the window on the X axis.
Ypos        Center              Scalar     This is the position of the window on the Y axis.
Box         True                Scalar     This Boolean states whether the dialog box will have a box drawn around it.
Shadow      False               Scalar     This Boolean states whether the dialog box will have a shadow on the box.

</R>Available Methods<!R>
</B>activate<!B>
Activation of an object means to make the object available for use. The
following example demonstrates how to activate a entry widget.
$returnValue = $fselectObject->activate ();

The variable </B>$returnValue<!B> contains a scalar value of what was typed into
the entry field.

The variable </B>$returnValue<!B> 
</B>set<!B>
Sets or resets certain attributes or features of the widget. The following
demonstrates how to call the set method from the entry field.
$fselectObject->set ( options );

The options are defined in the following table.

</U>Option      Default Value       Type       Purpose<!U>
Directory   Required            Scalar      The directory to display.
Dattrib     Normal              Scalar     The display attributes of a directory inside the scroll region.
Fattrib     Normal              Scalar     The display attributes of a file inside the scroll region.
Lattrib     Normal              Scalar     The display attributes of a link inside the scroll region.
Sattrib     Normal              Scalar     The display attributes of a socket inside the scroll region.
Highlight   Reverse             Scalar     The highlight attribute of the scrolling list.
Fieldattr   Normal              Scalar     The attribute of the characters typed in.
Filler      .                   Scalar     The default field character.
Fillattr    .                   Scalar     The default field character attribute.
Box         True                Scalar      Changes the current value of the box flag.

</B>bind<!B>
The bind method binds keys to events. The binding is specific to the individual
objects. The following example demonstrates how to call the bind method.
$fselectObject->bind ( options );

The options are defined in the following table.

</U>Option      Default Value       Type       Purpose<!U>
Key         Required            Scalar     This is the character to bind the event to.
Function    Required            Scalar     This is the name of the callback function.

</B>draw<!B>
This method draws the object on the screen. The following example demonstrates
how to call the draw method.
$fselectObject->draw ( options );
 
The options are defined in the following table.

</U>Option      Default Value       Type       Purpose<!U>
Box         True                Scalar     Draws the window with a box around it.

</B>erase<!B>
This method removes the object from the screen. This does </B/U>NOT<!B!U> 
destroy the object. The following example demonstrates how to call the erase 
method.
$fselectObject->erase ();

</B>raise<!B>
The raise method raises the widget to the top of the screen. This means if there
were any widgets obscuring part of the view, raising the object would bring the
complete object into view. The following example demonstrates how to call the 
raise method.
$fselectObject->raise();

</B>lower<!B>
The lower method lowers the object so it doesn't obscure the view of any other 
objects. The following example demonstrates how to call the lower method.
$fselectObject->lower();

</B>register<!B>
The register method registers the object to the default screen. This does </R>NOT<!R>
have to be called since the objects are registered automatically. This method
should be called if the </B>unregister<!B> method was called. The following
example demonstrates how to call the register method.
$fselectObject->register();

</B>unregister<!B>
The unregister method should be called when a widget, which is part of the
default screen, needs to be taken away temporarily. This does not delete or free
the object, it just unmaps it from any future screen refreshes. The object can
be registered by calling the </B>register<!B> method. The following example
demonstrates how to call the unregister method.
$fselectObject->unregister();

</B>getwin<!B>
This method returns a pointer to the window of the object. Not much use for this
yet. It will be useful in the future when the drawing methods are added. The
following example demonstrates how to call the getwin method.
$fselectObject->getwin();

</R>Default Key Bindings<!R>
Since this widget is created from both the entry field and the scrolling
list, the default key bindings of both widgets apply. There are, however,
some extra key bindings worth mentioning. 
<B=Note:> (SL) means the binding only works when in the scrolling list.
<B=     > (EF) means the binding only works when in the entry field.
</U>Key               Action<!U>
? (SL)            Displays information about the file currently highlighted.
Delete (SL)       Tries to delete the current file.
Return (SL)       If its a directory, enters it, other wise returns the full path to the file.
Tab (SL)          Leaves the scrolling list end enters the entry field.
Return (EF)       Leaves the entry field and enters the scrolling list.
Tab (EF)          Leaves the entry field and enters the scrolling list.

</R>Tips & Tricks<!R>
None.

</R>Physical Restrictions<!R>
Same as the scrolling list.

</R>Example Use Of The Widget<!R>
#!/usr/local/bin/perl

#
# Load in the Cdk Extension.
#
use Cdk;
Cdk::init();

# Create the file selector.
my $fselect = new Cdk::Fselect ('Height' => 20, 'Width' => 30);

# Activate the object.
my $filename = $fselect->activate();

# Exit Cdk.
Cdk::end();

# Print out the results.
print "\n\n\n\n";
print "You typed: <$filename>\n";
<C><#HL(70)>
                       Document Created: December, 1995
                       Document Revised: March, 1996
